#!/usr/bin/env python3

import argparse
import subprocess

#set up arguments parsing
parser = argparse.ArgumentParser()
parser.add_argument('--simple','-s', action='store_true',
					help="Compiles the program without strict gcc flags")

# can't use the flags in this group at the same time
group = parser.add_mutually_exclusive_group()
group.add_argument('--run', '-r', action='store_true',
					help="Runs the program")
group.add_argument('--valgrind', '-v', action='store_true',
					help="Runs the program in a valgrind environment")

args = parser.parse_args()

# setup variables for compilation
flags = "" if args.simple else "-Wall -Werror -Wextra -pedantic -std=gnu89"
valgrind = "" if not args.valgrind else "&& valgrind \
	--track-origins=yes --leak-check=full ./hsh"
run = "" if not args.run else "&& ./hsh"

compilation = f"gcc {flags} *.c -o hsh {valgrind} {run}"

# do not show a python traceback if CTRL + C or CTRL+ D are hit.
try:
	subprocess.run(compilation, shell=True)
except KeyboardInterrupt:
	pass
